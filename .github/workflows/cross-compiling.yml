name: Cross-Compiling

on:
    push:
        branches:
        - master

    workflow_dispatch:

jobs:
    Windows:
        runs-on: windows-2022

        strategy:
            matrix:
                compiler: [dmd, ldc2]
                dub-arch: [x86, x86_64]
                build-type: [plain, debug, unittest, release-nobounds, docs, betterC-plain, betterC-debug, betterC-release-nobounds]
                config: [library]

        steps:
        - name: Start Time
          id: start-time
          run: |
            $current_time = php -r "echo (new DateTimeImmutable('now', new DateTimeZone('UTC')))->format('Y-m-d H:i:sP');";
            echo $current_time;
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'start-time=${current_time}'.PHP_EOL, FILE_APPEND);";

        - name: Set arch names
          id: arch-name
          run: |
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'vcvarsall-arch-name='.((strcmp('${{ matrix.dub-arch }}', 'x86_64') === 0) ? ('x64') : ('x86')).PHP_EOL, FILE_APPEND);";

        - name: Set asset base name
          id: init-asset-name
          run: |
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'asset_base_name='.preg_replace('/^[^\/]+\//u', '', getenv('GITHUB_REPOSITORY')).'-'.getenv('GITHUB_SHA').'-windows-${{ matrix.dub-arch }}-${{ matrix.build-type }}'.PHP_EOL, FILE_APPEND);";
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'asset_base_name-x86='.preg_replace('/^[^\/]+\//u', '', getenv('GITHUB_REPOSITORY')).'-'.getenv('GITHUB_SHA').'-windows-x86-${{ matrix.build-type }}'.PHP_EOL, FILE_APPEND);";
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'asset_base_name-x86_64='.preg_replace('/^[^\/]+\//u', '', getenv('GITHUB_REPOSITORY')).'-'.getenv('GITHUB_SHA').'-windows-x86_64-${{ matrix.build-type }}'.PHP_EOL, FILE_APPEND);";

        - name: Init get-dlang
          run: |
            mkdir ~/get-dlang;
            cd ~/get-dlang;
            git init;
            git remote add origin 'https://gitlab.com/dokutoku/get-dlang.git';
            git config --local core.sparsecheckout true;
            git config --local core.autocrlf false;

        - name: Fetch get-dlang
          run: |
            cd ~/get-dlang;
            echo '/dmd-version.txt' >> '.git/info/sparse-checkout';
            echo '/ldc2-version.txt' >> '.git/info/sparse-checkout';
            echo '/template/powershell/install-dmd.ps1' >> '.git/info/sparse-checkout';
            echo '/template/powershell/install-ldc2.ps1' >> '.git/info/sparse-checkout';
            echo '/dmd-version.txt.sig' >> '.git/info/sparse-checkout';
            echo '/ldc2-version.txt.sig' >> '.git/info/sparse-checkout';
            echo '/template/powershell/install-dmd.ps1.sig' >> '.git/info/sparse-checkout';
            echo '/template/powershell/install-ldc2.ps1.sig' >> '.git/info/sparse-checkout';
            git fetch --depth=1 origin master;

        - name: Reset get-dlang
          run: |
            cd ~/get-dlang;
            git reset --hard origin/master;

        - name: Show latest commit of get-dlang
          run: |
            cd ~/get-dlang;
            git log -1;

        - name: Show get-dlang hashes
          run: |
            cd ~/get-dlang;
            (Get-ChildItem -Recurse -File).FullName | ForEach-Object { openssl sha512 $_;}

        - name: Verify get-dlang files
          run: |
            cd ~/get-dlang;
            Write-Output "-----BEGIN PUBLIC KEY-----`nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA2Mgmj1IMcTe4ZD0nH5Hj`nHTHdcj2S9I8eIpSYl0DdPGzQcLN06eOX+n4MhOo886NQTfBATVAjyGZy500/8JT3`n7wk/we8yRcxAzW18GjUtqiLW8nvSK7tsqPAO8AWJNldYKwM3xTNo0hZW3G5xlkSw`n0ixMlHTffQ2JxPv4xDgBlKUAndzGIPHGhPiPnPbOOS5tOYaWLk3wtXERJpnv4chx`nCNgJc+uY2RTZWQDLCfjJAi4kce+8lkxaIHHSUrRRtjHdTTvPVCg9EWaX53u8MAFf`nf2S9+6+CdrvKe3+IOppI5cfFZtw4rLWqhrg5tVI7JLIVjx2ioZ5cvR6tzNKKGJcw`nD71vrqGWY6BuGRCaVOGAL/grmw3p4EPGPyxmDCsAsWztdWx9EyHNKtI8zfCFEWBx`noGDHjMYUEtF+acVJAhAb7dqgQ8RTebIuQipxlpSLC7BZMHm72SE2TqixIWLSsgAJ`n7NMv0PhReU+payF+3JsKgZRXkIaD/hgdh/Lz2Cr5iEOKAes1Rh2j6Wx9BYrY7Sbi`ncOfOXduCKQ04siLr1JGt8ZdsmCRhM7GavgtF+WsZav1kCHotVDsVJD1VOQOIdxMQ`n1i2AFC69JTIl395UtO4MaKxNO8lbTF9lefOjp80q+HailSbkJpOvrRBG1S3k5PmE`n3d9rSpiJtcLimKRfGrdYh68CAwEAAQ==`n-----END PUBLIC KEY-----" | Out-File public.pem -Encoding ascii;
            (Get-ChildItem -Recurse -File -include *.ps1,*.sh,*.conf,*.yml,*.txt).FullName | ForEach-Object { openssl dgst -sha512 -verify public.pem -signature $_'.sig' $_; }

        - name: Dlang versions
          id: dlang-versions
          run: |
            cd ~/;
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'dlang_versions='.trim(file_get_contents('./get-dlang/dmd-version.txt')).'-'.trim(file_get_contents('./get-dlang/ldc2-version.txt')).PHP_EOL, FILE_APPEND);";

        - name: Installer-cache
          uses: actions/cache@v3
          with:
              path: |
                C:\cache

              key: |
                windows-dlang-${{ steps.dlang-versions.outputs.dlang_versions }}

        - name: Install dmd
          if: ${{ (matrix.compiler == 'dmd') }}
          run: |
            cd ~/;
            Powershell -ExecutionPolicy Bypass -File get-dlang/template/powershell/install-dmd.ps1;
            php -r "file_put_contents(getenv('GITHUB_PATH'), 'C:'.DIRECTORY_SEPARATOR.'D'.DIRECTORY_SEPARATOR.'dmd2'.DIRECTORY_SEPARATOR.'windows'.DIRECTORY_SEPARATOR.'bin'.PHP_EOL, FILE_APPEND);";

        - name: Show dmd versions
          if: ${{ (matrix.compiler == 'dmd') }}
          run: |
            dmd --version
            dub --version

        - name: Install ldc2
          if: ${{ (matrix.compiler == 'ldc2') }}
          run: |
            cd ~/;
            Powershell -ExecutionPolicy Bypass -File get-dlang/template/powershell/install-ldc2.ps1;
            php -r "file_put_contents(getenv('GITHUB_PATH'), 'C:'.DIRECTORY_SEPARATOR.'ldc2'.DIRECTORY_SEPARATOR.'bin'.PHP_EOL, FILE_APPEND);";

        - name: Show ldc2 versions
          if: ${{ (matrix.compiler == 'ldc2') }}
          run: |
            ldc2 --version
            dub --version

        - name: Checkout
          uses: actions/checkout@v3

        - name: Build
          shell: cmd
          run: |
            set __VSCMD_ARG_NO_LOGO=1
            call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ steps.arch-name.outputs.vcvarsall-arch-name }} -vcvars_spectre_libs=spectre
            dub build --force --combined --build-mode=allAtOnce --config=${{ matrix.config }} --arch=${{ matrix.dub-arch }} --build=${{ matrix.build-type }} --compiler=${{ matrix.compiler }}

        - name: Unittest
          if: ${{ (matrix.build-type == 'unittest') }}
          shell: cmd
          run: |
            set __VSCMD_ARG_NO_LOGO=1
            call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ steps.arch-name.outputs.vcvarsall-arch-name }} -vcvars_spectre_libs=spectre
            dub test --force --combined --build-mode=allAtOnce --config=${{ matrix.config }} --arch=${{ matrix.dub-arch }} --build=${{ matrix.build-type }} --compiler=${{ matrix.compiler }}

        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
              name: ${{ steps.init-asset-name.outputs.asset_base_name }}
              path: |
                docs
                lib

    MacOS:
        runs-on: macos-latest

        strategy:
            matrix:
                compiler: [dmd, ldc2]
                dub-arch: [x86_64]
                build-type: [plain, debug, unittest, release-nobounds, docs, betterC-plain, betterC-debug, betterC-release-nobounds]
                config: [library]

        steps:
        - name: Start Time
          id: start-time
          run: |
            current_time=`php -r "echo (new DateTimeImmutable('now', new DateTimeZone('UTC')))->format('Y-m-d H:i:sP');"`;
            echo $current_time;
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'start-time=${current_time}'.PHP_EOL, FILE_APPEND);";

        - name: Set asset base name
          id: init-asset-name
          run: |
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'asset_base_name='.preg_replace('/^[^\/]+\//u', '', getenv('GITHUB_REPOSITORY')).'-'.getenv('GITHUB_SHA').'-osx-x86_64-${{ matrix.build-type }}'.PHP_EOL, FILE_APPEND);";
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'asset_base_name-x86_64='.preg_replace('/^[^\/]+\//u', '', getenv('GITHUB_REPOSITORY')).'-'.getenv('GITHUB_SHA').'-osx-x86_64-${{ matrix.build-type }}'.PHP_EOL, FILE_APPEND);";

        - name: Init get-dlang
          run: |
            mkdir ~/get-dlang;
            cd ~/get-dlang;
            git init;
            git remote add origin 'https://gitlab.com/dokutoku/get-dlang.git';
            git config --local core.sparsecheckout true;
            git config --local core.autocrlf false;

        - name: Fetch get-dlang
          run: |
            cd ~/get-dlang;
            echo '/dmd-version.txt' >> '.git/info/sparse-checkout';
            echo '/ldc2-version.txt' >> '.git/info/sparse-checkout';
            echo '/template/shell/install-dmd/install-dmd-osx-x86_64.sh' >> '.git/info/sparse-checkout';
            echo '/template/shell/get-ldc2/get-ldc2-osx-x86_64.sh' >> '.git/info/sparse-checkout';
            echo '/dmd-version.txt.sig' >> '.git/info/sparse-checkout';
            echo '/ldc2-version.txt.sig' >> '.git/info/sparse-checkout';
            echo '/template/shell/install-dmd/install-dmd-osx-x86_64.sh.sig' >> '.git/info/sparse-checkout';
            echo '/template/shell/get-ldc2/get-ldc2-osx-x86_64.sh.sig' >> '.git/info/sparse-checkout';
            git fetch --depth=1 origin master;

        - name: Reset get-dlang
          run: |
            cd ~/get-dlang;
            git reset --hard origin/master;

        - name: Show latest commit of get-dlang
          run: |
            cd ~/get-dlang;
            git log -1;

        - name: Show get-dlang hashes
          run: |
            cd ~/get-dlang;
            find './' -type f | grep --regexp=^\.//\.git/ --invert-match | xargs openssl sha512;

        - name: Verify get-dlang files
          run: |
            cd ~/get-dlang;
            echo -e "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA2Mgmj1IMcTe4ZD0nH5Hj\nHTHdcj2S9I8eIpSYl0DdPGzQcLN06eOX+n4MhOo886NQTfBATVAjyGZy500/8JT3\n7wk/we8yRcxAzW18GjUtqiLW8nvSK7tsqPAO8AWJNldYKwM3xTNo0hZW3G5xlkSw\n0ixMlHTffQ2JxPv4xDgBlKUAndzGIPHGhPiPnPbOOS5tOYaWLk3wtXERJpnv4chx\nCNgJc+uY2RTZWQDLCfjJAi4kce+8lkxaIHHSUrRRtjHdTTvPVCg9EWaX53u8MAFf\nf2S9+6+CdrvKe3+IOppI5cfFZtw4rLWqhrg5tVI7JLIVjx2ioZ5cvR6tzNKKGJcw\nD71vrqGWY6BuGRCaVOGAL/grmw3p4EPGPyxmDCsAsWztdWx9EyHNKtI8zfCFEWBx\noGDHjMYUEtF+acVJAhAb7dqgQ8RTebIuQipxlpSLC7BZMHm72SE2TqixIWLSsgAJ\n7NMv0PhReU+payF+3JsKgZRXkIaD/hgdh/Lz2Cr5iEOKAes1Rh2j6Wx9BYrY7Sbi\ncOfOXduCKQ04siLr1JGt8ZdsmCRhM7GavgtF+WsZav1kCHotVDsVJD1VOQOIdxMQ\n1i2AFC69JTIl395UtO4MaKxNO8lbTF9lefOjp80q+HailSbkJpOvrRBG1S3k5PmE\n3d9rSpiJtcLimKRfGrdYh68CAwEAAQ==\n-----END PUBLIC KEY-----" > public.pem;
            find './' -type f | grep -E "\.(ps1|sh|conf|yml|txt)$" | xargs -I {} openssl dgst -sha512 -verify public.pem -signature {}.sig {};

        - name: Dlang versions
          id: dlang-versions
          run: |
            cd ~/;
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'dlang_versions='.trim(file_get_contents('./get-dlang/dmd-version.txt')).'-'.trim(file_get_contents('./get-dlang/ldc2-version.txt')).PHP_EOL, FILE_APPEND);";

        - name: Installer-cache
          uses: actions/cache@v3
          with:
              path: |
                ~/cache

              key: |
                osx-dlang-${{ steps.dlang-versions.outputs.dlang_versions }}

        - name: Install dmd
          if: ${{ (matrix.compiler == 'dmd') }}
          run: |
            cd ~/;
            sh ~/get-dlang/template/shell/install-dmd/install-dmd-osx-x86_64.sh;

        - name: Show dmd versions
          if: ${{ (matrix.compiler == 'dmd') }}
          run: |
            dmd --version;
            dub --version;

        - name: Install ldc2
          if: ${{ (matrix.compiler == 'ldc2') }}
          run: |
            cd ~/;
            sh ~/get-dlang/template/shell/get-ldc2/get-ldc2-osx-x86_64.sh;
            php -r "file_put_contents(getenv('GITHUB_PATH'), '/Users/runner/ldc2/bin'.PHP_EOL, FILE_APPEND);";

        - name: Show ldc2 versions
          if: ${{ (matrix.compiler == 'ldc2') }}
          run: |
            ldc2 --version;
            dub --version;

        - name: Checkout
          uses: actions/checkout@v3

        - name: Build
          run: |
            dub build --force --combined --build-mode=allAtOnce --config=${{ matrix.config }} --arch=${{ matrix.dub-arch }} --build=${{ matrix.build-type }} --compiler=${{ matrix.compiler }};

        - name: Unittest
          if: ${{ (matrix.build-type == 'unittest') }}
          run: |
            dub test --force --combined --build-mode=allAtOnce --config=${{ matrix.config }} --arch=${{ matrix.dub-arch }} --build=${{ matrix.build-type }} --compiler=${{ matrix.compiler }};

        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
              name: ${{ steps.init-asset-name.outputs.asset_base_name }}
              path: |
                docs
                lib

    Other_Platforms:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                compiler: [dmd, ldc2]
                dub-arch: [x86_64]
                build-type: [plain, debug, unittest, release-nobounds, docs, betterC-plain, betterC-debug, betterC-release-nobounds]
                config: [library]

        steps:
        - name: Start Time
          id: start-time
          run: |
            current_time=`php -r "echo (new DateTimeImmutable('now', new DateTimeZone('UTC')))->format('Y-m-d H:i:sP');"`;
            echo $current_time;
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'start-time=${current_time}'.PHP_EOL, FILE_APPEND);";

        - name: Set asset base name
          id: init-asset-name
          run: |
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'asset_base_name-x86_64='.preg_replace('/^[^\/]+\//u', '', getenv('GITHUB_REPOSITORY')).'-'.getenv('GITHUB_SHA').'-linux-x86_64-${{ matrix.build-type }}'.PHP_EOL, FILE_APPEND);";

        - name: Init get-dlang
          run: |
            mkdir ~/get-dlang;
            cd ~/get-dlang;
            git init;
            git remote add origin 'https://gitlab.com/dokutoku/get-dlang.git';
            git config --local core.sparsecheckout true;
            git config --local core.autocrlf false;

        - name: Init sparse-checkout
          run: |
            cd ~/get-dlang;
            echo '/dmd-version.txt' >> '.git/info/sparse-checkout';
            echo '/ldc2-version.txt' >> '.git/info/sparse-checkout';
            echo '/template/ldc2-conf/ldc2-linux-x86_64.conf' >> '.git/info/sparse-checkout';
            echo '/template/shell/install-dmd/install-dmd-ubuntu-x86_64.sh' >> '.git/info/sparse-checkout';
            echo '/template/shell/get-ldc2/get-ldc2-linux-x86_64.sh' >> '.git/info/sparse-checkout';
            echo '/dmd-version.txt.sig' >> '.git/info/sparse-checkout';
            echo '/ldc2-version.txt.sig' >> '.git/info/sparse-checkout';
            echo '/template/ldc2-conf/ldc2-linux-x86_64.conf.sig' >> '.git/info/sparse-checkout';
            echo '/template/shell/install-dmd/install-dmd-ubuntu-x86_64.sh.sig' >> '.git/info/sparse-checkout';
            echo '/template/shell/get-ldc2/get-ldc2-linux-x86_64.sh.sig' >> '.git/info/sparse-checkout';

        - name: Fetch get-dlang
          run: |
            cd ~/get-dlang;
            git fetch --depth=1 origin master;

        - name: Reset get-dlang
          run: |
            cd ~/get-dlang;
            git reset --hard origin/master;

        - name: Show latest commit of get-dlang
          run: |
            cd ~/get-dlang;
            git log -1;

        - name: Show get-dlang hashes
          run: |
            cd ~/get-dlang;
            find './' -type f | grep --regexp=^\./\.git/ --invert-match | xargs sha512sum;

        - name: Verify get-dlang files
          run: |
            cd ~/get-dlang;
            echo -e "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA2Mgmj1IMcTe4ZD0nH5Hj\nHTHdcj2S9I8eIpSYl0DdPGzQcLN06eOX+n4MhOo886NQTfBATVAjyGZy500/8JT3\n7wk/we8yRcxAzW18GjUtqiLW8nvSK7tsqPAO8AWJNldYKwM3xTNo0hZW3G5xlkSw\n0ixMlHTffQ2JxPv4xDgBlKUAndzGIPHGhPiPnPbOOS5tOYaWLk3wtXERJpnv4chx\nCNgJc+uY2RTZWQDLCfjJAi4kce+8lkxaIHHSUrRRtjHdTTvPVCg9EWaX53u8MAFf\nf2S9+6+CdrvKe3+IOppI5cfFZtw4rLWqhrg5tVI7JLIVjx2ioZ5cvR6tzNKKGJcw\nD71vrqGWY6BuGRCaVOGAL/grmw3p4EPGPyxmDCsAsWztdWx9EyHNKtI8zfCFEWBx\noGDHjMYUEtF+acVJAhAb7dqgQ8RTebIuQipxlpSLC7BZMHm72SE2TqixIWLSsgAJ\n7NMv0PhReU+payF+3JsKgZRXkIaD/hgdh/Lz2Cr5iEOKAes1Rh2j6Wx9BYrY7Sbi\ncOfOXduCKQ04siLr1JGt8ZdsmCRhM7GavgtF+WsZav1kCHotVDsVJD1VOQOIdxMQ\n1i2AFC69JTIl395UtO4MaKxNO8lbTF9lefOjp80q+HailSbkJpOvrRBG1S3k5PmE\n3d9rSpiJtcLimKRfGrdYh68CAwEAAQ==\n-----END PUBLIC KEY-----" > public.pem;
            find './' -type f | grep -E "\.(ps1|sh|conf|yml|txt)$" | xargs -I {} openssl dgst -sha512 -verify public.pem -signature {}.sig {};

        - name: Dlang versions
          id: dlang-versions
          run: |
            cd ~/;
            php -r "file_put_contents(getenv('GITHUB_OUTPUT'), 'dlang_versions='.trim(file_get_contents('./get-dlang/dmd-version.txt')).'-'.trim(file_get_contents('./get-dlang/ldc2-version.txt')).PHP_EOL, FILE_APPEND);";

        - name: Installer-cache
          uses: actions/cache@v3
          with:
              path: |
                ~/cache

              key: |
                other-platforms-dlang-${{ steps.dlang-versions.outputs.dlang_versions }}

        - name: Install dmd
          if: ${{ (matrix.compiler == 'dmd') }}
          run: |
            cd ~/;
            sh ~/get-dlang/template/shell/install-dmd/install-dmd-ubuntu-x86_64.sh;

        - name: Show dmd versions
          if: ${{ (matrix.compiler == 'dmd') }}
          run: |
            dmd --version;
            dub --version;

        - name: Install ldc2
          if: ${{ (matrix.compiler == 'ldc2') }}
          run: |
            cd ~/;
            sh ~/get-dlang/template/shell/get-ldc2/get-ldc2-linux-x86_64.sh;
            php -r "file_put_contents(getenv('GITHUB_PATH'), '/home/runner/ldc2/bin'.PHP_EOL, FILE_APPEND);";

        - name: Copy ldc2.conf
          if: ${{ (matrix.compiler == 'ldc2') }}
          run: |
            cp ~/get-dlang/template/ldc2-conf/ldc2-linux-x86_64.conf ~/ldc2/etc/ldc2.conf;

        - name: Show ldc2 version
          if: ${{ (matrix.compiler == 'ldc2') }}
          run: |
            ldc2 --version;
            dub --version;

        - name: Checkout
          uses: actions/checkout@v3

        - name: Build
          run: |
            dub build --force --combined --build-mode=allAtOnce --config=${{ matrix.config }} --arch=${{ matrix.dub-arch }} --build=${{ matrix.build-type }} --compiler=${{ matrix.compiler }};

        - name: Unittest
          if: ${{ (matrix.build-type == 'unittest') }}
          run: |
            dub test --force --combined --build-mode=allAtOnce --config=${{ matrix.config }} --arch=${{ matrix.dub-arch }} --build=${{ matrix.build-type }} --compiler=${{ matrix.compiler }};

        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
              name: ${{ steps.init-asset-name.outputs.asset_base_name-x86_64 }}
              path: |
                docs
                lib
